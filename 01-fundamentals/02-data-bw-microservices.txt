one of the biggest challange is tha datamanagement between different services

with microservices we store and access data in sort of strange way. 
1- how we sore data
2- how we access data
in microsrvice approach.

a- we create saperate database for each of different microservice.
b- we are not going to acces data from one service to other microservice's database, 
why this is?

why database per service?
1- we want each service to run indeendently of other services
2- database schema/structure might change unexpectedly
3- some services might function more efficiently with different types of DB's(sql VS noSql)

what? if we have one database for every services?
if some thing bad happens with database all services will be affected badly
scalling this database will be really challanging.

====================================Communication Strategies =====================
there are two strategies to communicaate between the services
1- sync 
2- async
these words dont mean what they mean in javascript

=>>> sync communication style
    services communicate with each other using diresct request
    this is not necessarily that this should b an http request. it is some kind of direct request to fetch some information

=>>> async communication style
    Services communicated with each other using events
    its a little bit confusing
 ============================= Notes on sync  Communication =======================
 => Pros
1- conceptually easy to understand
2- Service D dont need a database
=> Cons
3- it introduces a ependencies between the services
4- if any interservice request fails, the overall request fails
5- the entire request is only as fast as the slowest request
6- Can easily introduce webs of requests